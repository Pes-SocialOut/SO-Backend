"""empty message

Revision ID: f0a5fa72a6a9
Revises: 8a7e67fecfbc
Create Date: 2022-05-15 23:59:54.345372

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f0a5fa72a6a9'
down_revision = '8a7e67fecfbc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('stages', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('achievement_progress',
    sa.Column('user', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('achievement', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['achievement'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user', 'achievement')
    )
    op.create_table('admin',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friend_invites',
    sa.Column('invitee', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invitee'], ['users.id'], ),
    sa.PrimaryKeyConstraint('invitee')
    )
    op.create_table('friends',
    sa.Column('invitee', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('invited', postgresql.UUID(as_uuid=True), nullable=False),
    sa.CheckConstraint('invitee <> invited'),
    sa.ForeignKeyConstraint(['invited'], ['users.id'], ),
    sa.ForeignKeyConstraint(['invitee'], ['users.id'], ),
    sa.PrimaryKeyConstraint('invitee', 'invited')
    )
    op.create_table('user_lang',
    sa.Column('user', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('language', sa.Enum('catalan', 'spanish', 'english', name='lang'), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user', 'language')
    )
    op.add_column('air_quality_station', sa.Column('station_type', sa.Enum('traffic', 'background', 'industrial', name='station_type'), nullable=True))
    op.add_column('air_quality_station', sa.Column('urban_area', sa.Enum('urban', 'periurban', 'suburban', 'rural', name='urban_area'), nullable=True))
    op.add_column('email_verification', sa.Column('expires_at', sa.DateTime(), nullable=True))
    op.drop_column('users', 'mini_profile_img_uri')
    op.drop_column('users', 'profile_img_uri')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('profile_img_uri', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('mini_profile_img_uri', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('email_verification', 'expires_at')
    op.drop_column('air_quality_station', 'urban_area')
    op.drop_column('air_quality_station', 'station_type')
    op.drop_table('user_lang')
    op.drop_table('friends')
    op.drop_table('friend_invites')
    op.drop_table('admin')
    op.drop_table('achievement_progress')
    op.drop_table('achievements')
    # ### end Alembic commands ###
