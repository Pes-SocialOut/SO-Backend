"""empty message

Revision ID: 2a9ccfc41fb5
Revises: 
Create Date: 2022-05-17 17:53:47.403449

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2a9ccfc41fb5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('air_quality_station',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('eoi_code', sa.String(), nullable=False),
    sa.Column('station_type', sa.Enum('traffic', 'background', 'industrial', name='station_type'), nullable=True),
    sa.Column('urban_area', sa.Enum('urban', 'periurban', 'suburban', 'rural', name='urban_area'), nullable=True),
    sa.Column('altitude', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('air_condition_scale', sa.Float(), nullable=True),
    sa.Column('time_computation_scale', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('eoi_code')
    )
    op.create_table('email_verification',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('email')
    )
    op.create_table('pollutant',
    sa.Column('composition', sa.String(), nullable=False),
    sa.Column('common_lowerbound', sa.Float(), nullable=True),
    sa.Column('common_upperbound', sa.Float(), nullable=True),
    sa.Column('units', sa.String(), nullable=True),
    sa.Column('air_quality_weight', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('composition')
    )
    op.create_table('tri_cache',
    sa.Column('date_hour', sa.DateTime(), nullable=False),
    sa.Column('tri_object_bytes', postgresql.BYTEA(), nullable=True),
    sa.PrimaryKeyConstraint('date_hour')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('profile_img_uri', sa.String(), nullable=True),
    sa.Column('mini_profile_img_uri', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('hobbies', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('air_quality_data',
    sa.Column('date_hour', sa.DateTime(), nullable=False),
    sa.Column('station_eoi_code', sa.String(), nullable=False),
    sa.Column('pollutant_composition', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('contaminant_scale', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['pollutant_composition'], ['pollutant.composition'], ),
    sa.ForeignKeyConstraint(['station_eoi_code'], ['air_quality_station.eoi_code'], ),
    sa.PrimaryKeyConstraint('date_hour', 'station_eoi_code', 'pollutant_composition')
    )
    op.create_table('events',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('date_started', sa.DateTime(), nullable=False),
    sa.Column('date_end', sa.DateTime(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('user_creator', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('longitud', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=False),
    sa.Column('event_image_uri', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_creator'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('facebook_auth',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('google_auth',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('social_out_auth',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('salt', sa.String(), nullable=False),
    sa.Column('pw', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('likes',
    sa.Column('event_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'user_id')
    )
    op.create_table('participant',
    sa.Column('event_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('participant')
    op.drop_table('likes')
    op.drop_table('social_out_auth')
    op.drop_table('google_auth')
    op.drop_table('facebook_auth')
    op.drop_table('events')
    op.drop_table('air_quality_data')
    op.drop_table('users')
    op.drop_table('tri_cache')
    op.drop_table('pollutant')
    op.drop_table('email_verification')
    op.drop_table('air_quality_station')
    # ### end Alembic commands ###
